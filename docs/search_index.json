[
["index.html", "A Quick Start Guide to Survey Research Welcome to survey research", " A Quick Start Guide to Survey Research Liz Carey (and hopefully many others) 2019-01-23 Welcome to survey research This book is intended to be a quick resource for conducting survey research. By no means is it intended to be comprehensive of all survey research methodologies. "],
["preface.html", "Preface Outline Prerequisites Acknowledgements", " Preface Hopefully you’ll find this book to be a condensed and easy to read resource on survey research. We developed this book in the hopes of future collaboration among other UX researchers. Outline The content of the book will include: Chapter 1 Chapter 2 Prerequisites All you need is an interest in conducting survey research and basic data analysis, we’ll include code snippets (python and R) along the way. Acknowledgements This book wouldn’t be possible without the contributions of: "],
["macro.html", "Chapter 1 Designing a survey 1.1 What is your research goal? 1.2 Who are you studying?", " Chapter 1 Designing a survey 1.1 What is your research goal? First, establish if a survey is the right method to accomplish your research goal by asking yourself: What do you currently know? What don’t you know? Below is a useful visualization from the Nielsen Norman group on how to decide between which qualitative or quantitative methods to answer your research goal (Rohrer 2014). Surveys are great for answering the “How many and how much” of what people do and say; surveys are not the best method at understanding the “Why and how to fix” a product problem. 1.2 Who are you studying? This question may be simple at first, but when you start to narrow down References "],
["writing-effective-survey-questions.html", "Chapter 2 Writing effective survey questions", " Chapter 2 Writing effective survey questions Effective survey questions result in consistent and reliable responses. "],
["analysis.html", "Chapter 3 Survey Analysis 3.1 Organize your workspace 3.2 Data Cleaning", " Chapter 3 Survey Analysis After you’ve fielded your survey, here are the steps to making sense of the data. This section assumes you have a laptop set up to work with in either R or python. Head over to the Appendix page if you need help with set up. 3.1 Organize your workspace Before beginning any analysis, you’ll want to set up a reproducible workflow. Below is an adapted suggestion on how to organize your workspace from Ben Marwick, Carl Boettiger, and Lincoln Mullen (Ben Marwick 2018). Keeping your workspace organized is the best way for you and others to understand and reproduce your analysis. project |- DESCRIPTION # project metadata and dependencies |- README.md # top-level description of content and guide to users | |- data/ # data files used | +- raw_data.csv # data files in open formats such as TXT, CSV, TSV, etc. | +- cleaned_data.csv # data files that have been cleaned, merged, etc that you&#39;ll use for survey analysis | |- analysis/ # any programmatic code | +- my_report.Rmd # R markdown file with narrative text interwoven with code chunks | +- makefile # builds a PDF/HTML/DOCX file from the Rmd, code, and data files | +- scripts/ # code files (R, shell, etc.) used for data cleaning, analysis and visualisation | +- figures/ # saved outputs of your figures | |- R/ | +- my_functions.R # custom R functions that are used more than once throughout the project | |- man/ | +- my_functions.Rd # documentation for the R functions (auto-generated when using devtools) | R version #List the directory names you want to create folder_names &lt;- c(&quot;data&quot;, &quot;data/raw&quot;, &quot;data/clean&quot;, &quot;analysis&quot;, &quot;analysis/scripts&quot;, &quot;analysis/figures&quot;, &quot;R&quot;) #Create the directories sapply(folder_names, dir.create) 3.2 Data Cleaning Before you can begin looking at the results, you’ll need to clean the data. By “cleaning” the data, we mean edited the raw file into a format that will make the analysis valid and easier. 3.2.1 Load the data Download your raw survey data as a csv and load it into your your analysis tool of choice (e.g. Ipython notebook or Rstudio) R version # load necessary packages for analysis library(tidyverse) #contains all the library packages to manipulate and transform data library(summarytools) #shortcut tools to visualize summaries of the data # read/store the data as the variable df (short for dataframe) # replace &quot;file&quot; with &quot;https://raw.githubusercontent.com/lizmcarey/survey-guide/master/sample_data/Survey_test_data.csv&quot; to download the survey data set file &lt;- &quot;./sample_data/Survey_test_data.csv&quot; #load file from folder heirarchy df &lt;- read_csv(file) python version #load necessary modules for analysis import pandas as pd #read/store the data as the variable df (short for dataframe) df = pd.read_csv(filename) 3.2.2 Loading Qualtrics data When you download a csv from Qualtrics, it will come with a few extra rows you don’t need. Here are some automated scripts you can add to your makefile to speed up your workflow R version manual # Store the column names by reading in the column header df_names &lt;- read_csv(file, n_max=0) %&gt;% names() # Read the entire file df &lt;- read_csv(file, col_names = df_names, # use df_names to title the columns skip = 3) # skip the first three lines #store the question names question_bank &lt;- read_csv(file, n_max=1) %&gt;% # read in the first row of the file select(starts_with(&quot;Q&quot;)) %&gt;% # select columns that start with Q gather(key, question_text) # transform data from wide to long R version programmatic #function to load qualtrics csv and remove extra rows load_qualtrics_csv &lt;- function(file) { df_names &lt;- read_csv(file, n_max = 0) %&gt;% names() df &lt;- read_csv(file, col_names = df_names, skip = 3) } #function to store questions get_questions &lt;- function(file) { qb &lt;- read_csv(file, n_max = 1) %&gt;% select(starts_with(&quot;Q&quot;)) %&gt;% gather(key, question_text) } #Use function to read in survey file, and skip first 3 lines df &lt;- load_qualtrics_csv(file) #Use function to store question wording question_bank &lt;- get_questions(file) 3.2.3 Preview the data It’s important to get a look at the data to spot any errors in uploading the dataset and the validity of the responses. You’ll want to check for: Total number of observations/rows Duplicate responses Drop off/Abandon rate of the survey Average survey completion time “Speeders:” those who couldn’t have completed the survey in a reasonable amount of time There are multiple different ways to preview your dataset before analysis. One quick way is to check the first few rows of your data. You can do this with the function head(). #Check the first 5 rows of data head(df) ## # A tibble: 6 x 29 ## StartDate EndDate Status IPAddress Progress ## &lt;dttm&gt; &lt;dttm&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 2019-01-15 13:28:39 2019-01-15 13:28:39 Survey Test &lt;NA&gt; 100 ## 2 2019-01-15 13:28:40 2019-01-15 13:28:40 Survey Test &lt;NA&gt; 100 ## 3 2019-01-15 13:36:47 2019-01-15 13:36:47 Survey Test &lt;NA&gt; 100 ## 4 2019-01-15 13:36:47 2019-01-15 13:36:47 Survey Test &lt;NA&gt; 100 ## 5 2019-01-15 13:36:48 2019-01-15 13:36:48 Survey Test &lt;NA&gt; 100 ## 6 2019-01-15 13:36:48 2019-01-15 13:36:48 Survey Test &lt;NA&gt; 100 ## # ... with 24 more variables: `Duration (in seconds)` &lt;int&gt;, ## # Finished &lt;chr&gt;, RecordedDate &lt;dttm&gt;, ResponseId &lt;chr&gt;, ## # RecipientLastName &lt;chr&gt;, RecipientFirstName &lt;chr&gt;, ## # RecipientEmail &lt;chr&gt;, ExternalReference &lt;chr&gt;, LocationLatitude &lt;dbl&gt;, ## # LocationLongitude &lt;dbl&gt;, DistributionChannel &lt;chr&gt;, ## # UserLanguage &lt;chr&gt;, Q1 &lt;chr&gt;, Q2 &lt;chr&gt;, Q3_4 &lt;chr&gt;, Q3_5 &lt;chr&gt;, ## # Q3_6 &lt;chr&gt;, Q3_7 &lt;chr&gt;, Q3_8 &lt;chr&gt;, Q3_9 &lt;chr&gt;, Q3_10 &lt;chr&gt;, ## # Q3_10_TEXT &lt;chr&gt;, Q4 &lt;chr&gt;, Q5 &lt;chr&gt; A more comprehensive way to view your dataset is with the skimr package. This package will give an overview of the number of observations and variables in your data. The missing column should not be greater than 20% than your total number of observations (unless it’s a multiselect question). Questions with dropoff greater than 20% can signal the question was difficult for respondents to answer; you should be wary of response bias and consider removing the question from analysis and consider rewording the question library(skimr) skim(df) ## Skim summary statistics ## n obs: 502 ## n variables: 29 ## ## ── Variable type:character ─────────────────────────────────────────────────────────────── ## variable missing complete n min max empty n_unique ## DistributionChannel 0 502 502 4 4 0 1 ## ExternalReference 502 0 502 Inf -Inf 0 0 ## Finished 0 502 502 4 4 0 1 ## IPAddress 502 0 502 Inf -Inf 0 0 ## Q1 0 502 502 5 14 0 6 ## Q2 0 502 502 18 34 0 5 ## Q3_10 184 318 502 5 5 0 1 ## Q3_10_TEXT 184 318 502 51 135 0 318 ## Q3_4 201 301 502 26 26 0 1 ## Q3_5 165 337 502 22 22 0 1 ## Q3_6 174 328 502 21 21 0 1 ## Q3_7 172 330 502 19 19 0 1 ## Q3_8 184 318 502 18 18 0 1 ## Q3_9 162 340 502 23 23 0 1 ## Q4 0 502 502 11 22 0 7 ## Q5 0 502 502 53 134 0 502 ## RecipientEmail 502 0 502 Inf -Inf 0 0 ## RecipientFirstName 502 0 502 Inf -Inf 0 0 ## RecipientLastName 502 0 502 Inf -Inf 0 0 ## ResponseId 0 502 502 17 17 0 502 ## Status 0 502 502 11 11 0 1 ## UserLanguage 502 0 502 Inf -Inf 0 0 ## ## ── Variable type:integer ───────────────────────────────────────────────────────────────── ## variable missing complete n mean sd p0 p25 p50 p75 ## Duration (in seconds) 0 502 502 0.024 0.15 0 0 0 0 ## Progress 0 502 502 100 0 100 100 100 100 ## p100 hist ## 1 ▇▁▁▁▁▁▁▁ ## 100 ▁▁▁▇▁▁▁▁ ## ## ── Variable type:numeric ───────────────────────────────────────────────────────────────── ## variable missing complete n mean sd p0 p25 p50 ## LocationLatitude 0 502 502 37.77 0 37.77 37.77 37.77 ## LocationLongitude 0 502 502 -122.41 0 -122.41 -122.41 -122.41 ## p75 p100 hist ## 37.77 37.77 ▁▁▁▇▁▁▁▁ ## -122.41 -122.41 ▁▁▁▇▁▁▁▁ ## ## ── Variable type:POSIXct ───────────────────────────────────────────────────────────────── ## variable missing complete n min max median ## EndDate 0 502 502 2019-01-15 2019-01-15 2019-01-15 ## RecordedDate 0 502 502 2019-01-15 2019-01-15 2019-01-15 ## StartDate 0 502 502 2019-01-15 2019-01-15 2019-01-15 ## n_unique ## 74 ## 74 ## 74 Another package that can give a brief overview of your data is summarytools library(summarytools) view(dfSummary(df)) # use view lowercase to see html output in the Viewer pane References "],
["appendixA.html", "A Setting up R A.1 Package installation", " A Setting up R A.1 Package installation You’ll want to install the following packages: library(tidyverse) "],
["appendixB.html", "B Setting up python", " B Setting up python # Pandas makes working with data tables easier import pandas as pd # Numpy is a library for working with Arrays import numpy as np # Module for plotting graphs import matplotlib.pyplot as plt import seaborn as sns # SciPy implements many different numerical algorithms import scipy.stats as stats import collections "],
["references.html", "References", " References "]
]
